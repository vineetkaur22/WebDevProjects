{"ast":null,"code":"import _slicedToArray from \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\n\nfunction StockList({\n  stocks\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        quantities = _useState2[0],\n        setQuantities = _useState2[1];\n\n  let stockNames = [];\n  let equities = [];\n  stocks.forEach(stockMap => {\n    stockNames.push(stockMap[\"stockName\"]);\n    quantities.push(stockMap[\"quantity\"]);\n    equities.push(stockMap[\"equity\"]);\n  });\n\n  const onKeyUp = e => {\n    if (e.key === 'Enter') {\n      console.log(\"Enter clicked\");\n      console.log(e.target.value);\n      console.log(e.target.key);\n    }\n  };\n\n  const handleQuantityChange = e => {\n    let quantityText = e.target.value;\n    let isnum = /^\\d+$/.test(quantityText);\n\n    if (isnum) {\n      console.log(\"Is a number\");\n      quantities[e.target.key] = quantityText; //stockName = stockNames[index];\n      //quantity = parseInt(quantityText);\n      //equity = equities[];\n      //onChange={ e => handleQuantityChange(e)} \n    } else {\n      console.log(\"Is not a number\");\n      quantities[e.target.key] = quantities[e.target.key];\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Your Virtual Portfolio\"), React.createElement(\"ol\", {\n    className: \"stock-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"stock-item-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Stock Symbol\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Last Updated Date\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Your Equity\"))), stocks.map((stockMap, index) => {\n    return React.createElement(\"li\", {\n      className: \"stock-item\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, stockMap[\"stockName\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, stockMap[\"price\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, stockMap[\"lastUpdatedDate\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: index,\n      type: \"text\",\n      name: \"text\",\n      value: stockMap[\"quantity\"],\n      placeholder: \"0\",\n      onChange: e => handleQuantityChange(e),\n      onKeyUp: onKeyUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, stockMap[\"equity\"])));\n  })));\n}\n\n;\nexport default StockList;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx"],"names":["React","useState","useCallback","useEffect","StockList","stocks","quantities","setQuantities","stockNames","equities","forEach","stockMap","push","onKeyUp","e","key","console","log","target","value","handleQuantityChange","quantityText","isnum","test","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nfunction StockList({stocks}){\n\n   const [quantities, setQuantities] = useState([]);\n   let stockNames = [];\n   let equities = [];\n\n   stocks.forEach((stockMap) => {\n      stockNames.push(stockMap[\"stockName\"]);\n      quantities.push(stockMap[\"quantity\"]);\n      equities.push(stockMap[\"equity\"]);\n   });\n\n   const onKeyUp = (e) => {\n      if(e.key === 'Enter') {\n          console.log(\"Enter clicked\")\n          console.log(e.target.value);\n          console.log(e.target.key);\n      }\n  };\n\n   const handleQuantityChange = ((e) => {\n      let quantityText = e.target.value;\n      let isnum = /^\\d+$/.test(quantityText);\n      if(isnum){\n         console.log(\"Is a number\");\n         quantities[e.target.key] = quantityText;\n         //stockName = stockNames[index];\n         //quantity = parseInt(quantityText);\n         //equity = equities[];\n   \n         //onChange={ e => handleQuantityChange(e)} \n      }\n      else{\n         console.log(\"Is not a number\");\n         quantities[e.target.key] = quantities[e.target.key];\n      }\n\n   });\n\n\treturn (\n   <div>\n   <h2>Your Virtual Portfolio</h2>\n   <ol className=\"stock-list\"> \n    \n      <li className=\"stock-item-header\">\n         <div>\n         <div>Stock Symbol</div>\n         <div>Price</div>\n         <div>Last Updated Date</div>\n         <div>Quantity</div>\n         <div>Your Equity</div>\n      </div> \n      </li>\n   {\n    stocks.map((stockMap,index)=>{\n      return  <li className=\"stock-item\" key={index}>\n                  <div>\n                  <div>{stockMap[\"stockName\"]}</div>\n                  <div>{stockMap[\"price\"]}</div>\n                  <div>{stockMap[\"lastUpdatedDate\"]}</div>\n                  <div>\n                     <input key={index} type=\"text\" name=\"text\" value={stockMap[\"quantity\"]} \n                     placeholder=\"0\" onChange={ e => handleQuantityChange(e)} onKeyUp={onKeyUp}/>\n                  </div>\n                  <div>{stockMap[\"equity\"]}</div>\n                </div> \n             </li>\n          })\n       }\n    </ol>\n    </div>\n\t);\n};\n\nexport default StockList;"]},"metadata":{},"sourceType":"module"}