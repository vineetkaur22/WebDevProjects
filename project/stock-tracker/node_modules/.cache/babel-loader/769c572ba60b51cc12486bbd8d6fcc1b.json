{"ast":null,"code":"export var login=function login(_ref){var username=_ref.username;return fetch('/login',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({username:username})}).catch(function(err){return Promise.reject({err:'network-issue',details:\"network error\"});}).then(function(response){if(response.ok){return response.json();}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var addUser=function addUser(_ref2){var username=_ref2.username;return fetch('/users',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({username:username})}).catch(function(err){return Promise.reject({err:'network-issue',details:\"network error\"});}).then(function(response){if(response.ok){return Promise.resolve(response);}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var addStock=function addStock(_ref3){var stockname=_ref3.stockname,username=_ref3.username;return fetch('/stocks',{method:'POST',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({stockname:stockname,username:username}),credentials:'include'}).catch(function(err){return Promise.reject({err:'network-issue',details:err});}).then(function(response){if(response.ok){return Promise.resolve(response);}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var getStocks=function getStocks(){return fetch('/stocks',{method:'GET',credentials:'include'}).catch(function(err){return Promise.reject({err:'network-issue',details:err});}).then(function(response){if(response.ok){return response.json();}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var refreshStocks=function refreshStocks(){return fetch('/refreshstocks',{method:'GET',credentials:'include'}).catch(function(err){if(err)return Promise.reject({err:'network-issue',details:err});else return Promise.reject({err:'network-issue',details:\"network error\"});}).then(function(response){if(response.ok){return response.json();}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var updateStock=function updateStock(_ref4){var stockname=_ref4.stockname,quantity=_ref4.quantity,equity=_ref4.equity;return fetch('/stocks',{method:'PUT',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({stockname:stockname,quantity:quantity,equity:equity}),credentials:'include'}).catch(function(err){return Promise.reject({err:'network-issue',details:err});}).then(function(response){if(response.ok){return Promise.resolve(response);}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var deleteStock=function deleteStock(_ref5){var stockname=_ref5.stockname;return fetch('/stocks',{method:'DELETE',headers:new Headers({'content-type':'application/json'}),body:JSON.stringify({stockname:stockname}),credentials:'include'}).catch(function(err){return Promise.reject({err:'network-issue',details:err});}).then(function(response){if(response.ok){return Promise.resolve(response);}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};export var logout=function logout(){return fetch('/logout',{method:'GET',credentials:'include'}).catch(function(err){return Promise.reject({err:'network-issue',details:err});}).then(function(response){if(response.ok){return response.json();}else if(response.status===403){return Promise.reject('You are not an authorized user');}else if(response.status===401){return Promise.reject('You must be logged in');}else{return Promise.reject('Server error');}});};","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/services.js"],"names":["login","username","fetch","method","headers","Headers","body","JSON","stringify","catch","err","Promise","reject","details","then","response","ok","json","status","addUser","resolve","addStock","stockname","credentials","getStocks","refreshStocks","updateStock","quantity","equity","deleteStock","logout"],"mappings":"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","sourcesContent":["export const login = ({username}) => {\n    return fetch('/login', {\n      method: 'POST',\n      headers: new Headers({ 'content-type': 'application/json' }),\n      body: JSON.stringify({username}),\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: \"network error\" });\n    })\n    .then( response => {\n      if( response.ok ) {\n        return response.json();\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }\n    });\n };\n  \nexport const addUser = ({username}) => {\n    return fetch('/users', {\n      method: 'POST',\n      headers: new Headers({ 'content-type': 'application/json' }),\n      body: JSON.stringify({username}),\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: \"network error\" });\n    })\n    .then( response => { \n      if( response.ok ) {\n        return Promise.resolve(response);\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }\n    });\n};\n\nexport const addStock = ({stockname, username}) => {\n    return fetch('/stocks', {\n      method: 'POST',\n      headers: new Headers({ 'content-type': 'application/json' }),\n      body: JSON.stringify({stockname,username}),\n      credentials: 'include',\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: err });\n    })\n    .then( response => { \n      if( response.ok ) {\n        return Promise.resolve(response);\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }\n    });\n};\n\nexport const getStocks = (() => {\n    return fetch('/stocks', {\n      method: 'GET', \n      credentials: 'include',\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: err });\n    })\n    .then( response => {\n      if( response.ok ) {\n        return response.json();\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }    });\n  });\n\nexport const refreshStocks = (() => {\n    return fetch('/refreshstocks', {\n      method: 'GET', \n      credentials: 'include',\n    })\n    .catch( err => {\n      if(err)\n        return Promise.reject({ err: 'network-issue', details: err});\n      else\n        return Promise.reject({ err: 'network-issue', details:\"network error\" });\n    })\n    .then( response => {\n      if( response.ok ) {\n        return response.json();\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }\n    });\n  });\n\nexport const updateStock = ({stockname, quantity, equity}) => {\n    return fetch('/stocks', {\n      method: 'PUT',\n      headers: new Headers({ 'content-type': 'application/json' }),\n      body: JSON.stringify({stockname, quantity, equity}),\n      credentials: 'include',\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: err });\n    })\n    .then( response => { \n      if( response.ok ) {\n        return Promise.resolve(response);\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }    });\n  };\n\nexport const deleteStock = ({stockname}) => {\n    return fetch('/stocks', {\n      method: 'DELETE',\n      headers: new Headers({ 'content-type': 'application/json' }),\n      body: JSON.stringify({stockname}),\n      credentials: 'include',\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: err });\n    })\n    .then( response => { \n      if( response.ok ) {\n        return Promise.resolve(response);\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }    });\n  };\n\nexport const logout = () => {\n    return fetch('/logout', {\n      method: 'GET',\n      credentials: 'include',\n    })\n    .catch( err => {\n      return Promise.reject({ err: 'network-issue', details: err });\n    })\n    .then( response => {\n      if( response.ok ) {\n        return response.json();\n      }\n      else if (response.status === 403){\n        return Promise.reject('You are not an authorized user');\n      }\n      else if (response.status === 401){\n          return Promise.reject('You must be logged in');\n      }\n      else{\n        return Promise.reject('Server error');\n      }    });\n  };\n  \n  \n"]},"metadata":{},"sourceType":"module"}