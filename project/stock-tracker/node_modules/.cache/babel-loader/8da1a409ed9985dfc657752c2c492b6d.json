{"ast":null,"code":"import _slicedToArray from \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/Login.jsx\";\nimport React, { useState } from 'react';\nimport { addUser } from './services';\n\nfunction Login({\n  onLogin\n}) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loginButtonDisabled = _useState6[0],\n        setLoginButtonDisabled = _useState6[1];\n\n  const handleInput = inputText => {\n    setUsername(inputText);\n\n    if (inputText === \"\") {\n      setLoginButtonDisabled(true);\n    } else {\n      setLoginButtonDisabled(false);\n    }\n  };\n\n  const onKeyUp = e => {\n    if (e.key === 'Enter') {\n      handleUsername();\n    }\n  };\n\n  let regExp = /^[a-zA-Z0-9]*$/;\n\n  const handleUsername = () => {\n    if (username === \"\") {\n      setErrorMessage(\"Username cannot be empty\");\n    } else if (!regExp.test(usernameInput)) {\n      setErrorMessage(\"* Username can only contain alphabets or numbers\");\n    } else {\n      setErrorMessage(\"\");\n      addUser({\n        username\n      }).then(function (response) {\n        onLogin(username);\n      }).catch(function (e) {\n        setErrorMessage(e.message);\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    value: username,\n    onChange: e => handleInput(e.target.value),\n    onKeyUp: onKeyUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    id: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, errorMessage), React.createElement(\"button\", {\n    id: \"submit-button\",\n    type: \"submit\",\n    disabled: loginButtonDisabled,\n    onClick: handleUsername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/Login.jsx"],"names":["React","useState","addUser","Login","onLogin","username","setUsername","errorMessage","setErrorMessage","loginButtonDisabled","setLoginButtonDisabled","handleInput","inputText","onKeyUp","e","key","handleUsername","regExp","test","usernameInput","then","response","catch","message","target","value"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAyB;AAAA,oBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACdI,QADc;AAAA,QACJC,WADI;;AAAA,qBAEmBL,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAEdM,YAFc;AAAA,QAEAC,eAFA;;AAAA,qBAG8BP,QAAQ,CAAC,IAAD,CAHtC;AAAA;AAAA,QAGjBQ,mBAHiB;AAAA,QAGIC,sBAHJ;;AAKrB,QAAMC,WAAW,GAAKC,SAAD,IAAe;AAChCN,IAAAA,WAAW,CAACM,SAAD,CAAX;;AACA,QAAGA,SAAS,KAAK,EAAjB,EAAoB;AAChBF,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,KAFD,MAGI;AACAA,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH;AACJ,GARD;;AAUA,QAAMG,OAAO,GAAIC,CAAD,IAAO;AACnB,QAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAsB;AAClBC,MAAAA,cAAc;AACjB;AACJ,GAJD;;AAMH,MAAIC,MAAM,GAAG,gBAAb;;AAEG,QAAMD,cAAc,GAAI,MAAM;AAChC,QAAGX,QAAQ,KAAK,EAAhB,EAAmB;AAClBG,MAAAA,eAAe,CAAC,0BAAD,CAAf;AACA,KAFD,MAGK,IAAG,CAACS,MAAM,CAACC,IAAP,CAAYC,aAAZ,CAAJ,EAA+B;AACnCX,MAAAA,eAAe,CAAC,kDAAD,CAAf;AACA,KAFI,MAGD;AACHA,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAN,MAAAA,OAAO,CAAC;AAACG,QAAAA;AAAD,OAAD,CAAP,CACCe,IADD,CACO,UAASC,QAAT,EAAmB;AACzBjB,QAAAA,OAAO,CAACC,QAAD,CAAP;AACA,OAHD,EAICiB,KAJD,CAIO,UAASR,CAAT,EAAY;AAClBN,QAAAA,eAAe,CAACM,CAAC,CAACS,OAAH,CAAf;AACA,OAND;AAOA;AACD,GAjBE;;AAmBA,SACF;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,gBAA/B;AAAgD,IAAA,KAAK,EAAElB,QAAvD;AACC,IAAA,QAAQ,EAAGS,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACU,MAAF,CAASC,KAAV,CAD5B;AAC8C,IAAA,OAAO,EAAEZ,OADvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAIC;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBN,YAAzB,CAJD,EAKC;AAAQ,IAAA,EAAE,EAAC,eAAX;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,QAAQ,EAAEE,mBAAnD;AAAwE,IAAA,OAAO,EAAEO,cAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALD,CADD,CADE;AAWF;;AAED,eAAeb,KAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport { addUser } from './services';\n\nfunction Login({onLogin}){\n    const [username, setUsername] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\tconst [loginButtonDisabled, setLoginButtonDisabled] = useState(true);\n\t\n    const handleInput = ((inputText) => {\n        setUsername(inputText);\n        if(inputText === \"\"){\n            setLoginButtonDisabled(true);\n        }\n        else{\n            setLoginButtonDisabled(false);\n        }\n    });\n    \n    const onKeyUp = (e) => {\n        if(e.key === 'Enter') {\n            handleUsername();\n        }\n    };\n\n\tlet regExp = /^[a-zA-Z0-9]*$/;\n\n    const handleUsername = (() => {\n\t\tif(username === \"\"){\n\t\t\tsetErrorMessage(\"Username cannot be empty\");\n\t\t}\n\t\telse if(!regExp.test(usernameInput)){\n\t\t\tsetErrorMessage(\"* Username can only contain alphabets or numbers\");\n\t\t}\n\t\telse{\n\t\t\tsetErrorMessage(\"\");\n\t\t\taddUser({username})\n\t\t\t.then( function(response) {\n\t\t\t\tonLogin(username)\n\t\t\t})\n\t\t\t.catch(function(e) {\n\t\t\t\tsetErrorMessage(e.message);\n\t\t\t});\n\t\t}\n\t}); \n\n    return (\n\t\t<div className = \"login-page\">\n\t\t\t<div className=\"login-box\">\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<input type=\"text\" placeholder=\"Enter username\" value={username}\n\t\t\t\t\tonChange={ e => handleInput(e.target.value)} onKeyUp={onKeyUp}/>\n\t\t\t\t<span id=\"errorMessage\">{errorMessage}</span>\n\t\t\t\t<button id=\"submit-button\" type=\"submit\" disabled={loginButtonDisabled} onClick={handleUsername}>Login</button>\n\t\t\t</div>\n\t\t</div>\t\n  \t);\n }\n\n export default Login;\n"]},"metadata":{},"sourceType":"module"}