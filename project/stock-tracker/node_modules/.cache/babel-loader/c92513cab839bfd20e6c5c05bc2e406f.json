{"ast":null,"code":"import _slicedToArray from \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\n\nfunction StockList({\n  stocks\n}) {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1]; // let quantities = [];\n  // let stockNames = [];\n  // let equities = [];\n  // stocks.forEach((stockMap) => {\n  //    stockNames.push(stockMap[\"stockName\"]);\n  //    quantities.push(stockMap[\"quantity\"]);\n  //    equities.push(stockMap[\"equity\"]);\n  // });\n\n\n  const onKeyUp = e => {\n    if (e.key === 'Enter') {\n      console.log(\"Enter clicked\");\n      console.log(e.target.value);\n      console.log(e.target.key);\n    }\n  };\n\n  const handleQuantityChange = e => {\n    let quantityText = e.target.value;\n    let index = e.target.id;\n    let isnum = /^\\d+$/.test(quantityText);\n\n    if (isnum) {\n      console.log(\"Is a number\");\n      let quantity = parseInt(quantityText);\n      console.log(\"index\" + index);\n      console.log(stocks[index]);\n      stocks[index][\"quantity\"] = quantity; //quantities[e.target.key] = quantityText;\n      //stockName = stockNames[index];\n      //quantity = parseInt(quantityText);\n      //equity = equities[];\n      //onChange={ e => handleQuantityChange(e)} \n      // let quantity = parseInt(quantityText);\n      // quantities[index] = quantity;\n      // console.log(\"new quantity:\" + quantities[index]);\n\n      setValue(++value);\n    } else {\n      console.log(\"Is not a number\"); //quantities[e.target.key] = quantities[e.target.key];\n    }\n  };\n\n  console.log(stocks[0]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Your Virtual Portfolio\"), React.createElement(\"ol\", {\n    className: \"stock-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"stock-item-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Stock Symbol\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Last Updated Date\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Your Equity\"))), stocks.map((stockMap, index) => {\n    return React.createElement(\"li\", {\n      className: \"stock-item\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, stockMap[\"stockName\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, stockMap[\"price\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, stockMap[\"lastUpdatedDate\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: index,\n      value: stockMap[\"quantity\"],\n      onChange: e => handleQuantityChange(e),\n      onKeyUp: onKeyUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, stockMap[\"equity\"])));\n  })));\n}\n\n;\nexport default StockList;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx"],"names":["React","useState","useCallback","useEffect","StockList","stocks","value","setValue","onKeyUp","e","key","console","log","target","handleQuantityChange","quantityText","index","id","isnum","test","quantity","parseInt","map","stockMap"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nfunction StockList({stocks}){\n\n   let [value, setValue] = useState(0);\n\n   // let quantities = [];\n   // let stockNames = [];\n   // let equities = [];\n\n   // stocks.forEach((stockMap) => {\n   //    stockNames.push(stockMap[\"stockName\"]);\n   //    quantities.push(stockMap[\"quantity\"]);\n   //    equities.push(stockMap[\"equity\"]);\n   // });\n\n   const onKeyUp = (e) => {\n      if(e.key === 'Enter') {\n          console.log(\"Enter clicked\")\n          console.log(e.target.value);\n          console.log(e.target.key);\n      }\n  };\n\n   const handleQuantityChange = ((e) => {\n      let quantityText = e.target.value;\n      let index = e.target.id;\n      let isnum = /^\\d+$/.test(quantityText);\n      if(isnum){\n         console.log(\"Is a number\");\n         let quantity = parseInt(quantityText);\n         console.log(\"index\" + index);\n         console.log(stocks[index]);\n\n         stocks[index][\"quantity\"] = quantity;\n         //quantities[e.target.key] = quantityText;\n         //stockName = stockNames[index];\n         //quantity = parseInt(quantityText);\n         //equity = equities[];\n   \n         //onChange={ e => handleQuantityChange(e)} \n\n         // let quantity = parseInt(quantityText);\n         // quantities[index] = quantity;\n         // console.log(\"new quantity:\" + quantities[index]);\n         setValue(++value);\n      }\n      else{\n         console.log(\"Is not a number\");\n         //quantities[e.target.key] = quantities[e.target.key];\n      }\n\n   });\n\n   console.log(stocks[0]);\n\n\treturn (\n   <div>\n   <h2>Your Virtual Portfolio</h2>\n   <ol className=\"stock-list\"> \n    \n      <li className=\"stock-item-header\">\n         <div>\n         <div>Stock Symbol</div>\n         <div>Price</div>\n         <div>Last Updated Date</div>\n         <div>Quantity</div>\n         <div>Your Equity</div>\n      </div> \n      </li>\n   {\n    stocks.map((stockMap,index)=>{\n      return  <li className=\"stock-item\" key={index}>\n                  <div>\n                  <div>{stockMap[\"stockName\"]}</div>\n                  <div>{stockMap[\"price\"]}</div>\n                  <div>{stockMap[\"lastUpdatedDate\"]}</div>\n                  <div>\n                     <input type=\"text\" id={index} value={stockMap[\"quantity\"]} \n                      onChange={ e => handleQuantityChange(e)} onKeyUp={onKeyUp}/>\n                  </div>\n                  <div>{stockMap[\"equity\"]}</div>\n                </div> \n             </li>\n          })\n       }\n    </ol>\n    </div>\n\t);\n};\n\nexport default StockList;"]},"metadata":{},"sourceType":"module"}