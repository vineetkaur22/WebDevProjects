{"ast":null,"code":"import _slicedToArray from\"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect}from'react';import StockList from'./StockList';import{getStocks,refreshStocks}from'./services';import AddStock from'./AddStock';var REFRESH_TIME_IN_MS=60000;function StockApp(_ref){var onLogout=_ref.onLogout,username=_ref.username,errorMessage=_ref.errorMessage,setErrorMessage=_ref.setErrorMessage;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stocks=_useState2[0],setStocks=_useState2[1];//const [errorMessage, setErrorMessage] = useState([]);\nvar relaodStocks=useCallback(function(){getStocks().then(function(stocklist){setStocks(stocklist);}).catch(function(err){setErrorMessage(err);});},[]);var handleRefreshStocks=useCallback(function(){refreshStocks().then(function(){relaodStocks();}).catch(function(err){setErrorMessage(err);});},[]);useEffect(function(){if(username){handleRefreshStocks();var intervalId=setInterval(function(){handleRefreshStocks();},REFRESH_TIME_IN_MS);return function cleanup(){clearInterval(intervalId);};}},[]);return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"top-bar\"},React.createElement(\"span\",null,\"Logged in : \",username),React.createElement(\"button\",{onClick:handleRefreshStocks},\"Refresh\"),React.createElement(\"button\",{onClick:onLogout},\"Logout\")),React.createElement(AddStock,{username:username,relaodStocks:relaodStocks}),React.createElement(StockList,{stocks:stocks,relaodStocks:relaodStocks,setErrorMessage:setErrorMessage}));};export default StockApp;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockApp.jsx"],"names":["React","useState","useCallback","useEffect","StockList","getStocks","refreshStocks","AddStock","REFRESH_TIME_IN_MS","StockApp","onLogout","username","errorMessage","setErrorMessage","stocks","setStocks","relaodStocks","then","stocklist","catch","err","handleRefreshStocks","intervalId","setInterval","cleanup","clearInterval"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,CAAuCC,SAAvC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAAQC,SAAR,CAAmBC,aAAnB,KAAuC,YAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,KAA3B,CAEA,QAASC,CAAAA,QAAT,MAAsE,IAAnDC,CAAAA,QAAmD,MAAnDA,QAAmD,CAAzCC,QAAyC,MAAzCA,QAAyC,CAA/BC,YAA+B,MAA/BA,YAA+B,CAAjBC,eAAiB,MAAjBA,eAAiB,eAEvCZ,QAAQ,CAAC,EAAD,CAF+B,wCAE5Da,MAF4D,eAEpDC,SAFoD,eAGnE;AAEA,GAAMC,CAAAA,YAAY,CAAGd,WAAW,CAAC,UAAM,CACpCG,SAAS,GACRY,IADD,CACO,SAAAC,SAAS,CAAI,CACjBH,SAAS,CAACG,SAAD,CAAT,CACF,CAHD,EAICC,KAJD,CAIO,SAASC,GAAT,CAAa,CACjBP,eAAe,CAACO,GAAD,CAAf,CACF,CAND,EAOF,CAR+B,CAQ9B,EAR8B,CAAhC,CAUA,GAAMC,CAAAA,mBAAmB,CAAGnB,WAAW,CAAC,UAAM,CAC3CI,aAAa,GACZW,IADD,CACO,UAAM,CACVD,YAAY,GACd,CAHD,EAICG,KAJD,CAIO,SAASC,GAAT,CAAa,CACjBP,eAAe,CAACO,GAAD,CAAf,CACF,CAND,EAOF,CARsC,CAQrC,EARqC,CAAvC,CAUAjB,SAAS,CAAC,UAAM,CACb,GAAGQ,QAAH,CAAY,CACTU,mBAAmB,GACzB,GAAMC,CAAAA,UAAU,CAAGC,WAAW,CAAE,UAAM,CACrCF,mBAAmB,GACnB,CAF6B,CAE3Bb,kBAF2B,CAA9B,CAGA,MAAO,SAASgB,CAAAA,OAAT,EAAmB,CACzBC,aAAa,CAACH,UAAD,CAAb,CACM,CAFP,CAGI,CACH,CAVQ,CAUP,EAVO,CAAT,CAYF,MACE,gCACG,2BAAK,SAAS,CAAC,SAAf,EACG,+CAAmBX,QAAnB,CADH,CAEG,8BAAQ,OAAO,CAAEU,mBAAjB,YAFH,CAGG,8BAAQ,OAAO,CAAEX,QAAjB,WAHH,CADH,CAMG,oBAAC,QAAD,EAAU,QAAQ,CAAEC,QAApB,CAA8B,YAAY,CAAEK,YAA5C,EANH,CAOG,oBAAC,SAAD,EAAW,MAAM,CAAEF,MAAnB,CAA2B,YAAY,CAAEE,YAAzC,CAAuD,eAAe,CAAEH,eAAxE,EAPH,CADF,CAWA,EAED,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport StockList from './StockList';\nimport {getStocks ,refreshStocks} from './services';\nimport AddStock from './AddStock'; \n\nconst REFRESH_TIME_IN_MS = 60000;\n\nfunction StockApp({onLogout, username, errorMessage, setErrorMessage}){\n\n   const [stocks, setStocks] = useState([]);\t\n   //const [errorMessage, setErrorMessage] = useState([]);\n    \n   const relaodStocks = useCallback(() => {\n      getStocks()\n      .then( stocklist => { \n         setStocks(stocklist);\n      })\n      .catch(function(err){\n         setErrorMessage(err);\n      });\n   },[]);\n\n   const handleRefreshStocks = useCallback(() => {\n      refreshStocks()\n      .then( () => { \n         relaodStocks();\n      })\n      .catch(function(err){\n         setErrorMessage(err);\n      });\n   },[]);\n\n   useEffect(() => {\n      if(username){\n         handleRefreshStocks();\n\t\t\tconst intervalId = setInterval( () => {\n\t\t\t\thandleRefreshStocks();\n\t\t\t}, REFRESH_TIME_IN_MS );\n\t\t\treturn function cleanup() {\n\t\t\t\tclearInterval(intervalId);\n         };      \n      }\n   },[]);\n\n\treturn (\n   <div>\n      <div className=\"top-bar\">\n         <span>Logged in : {username}</span>\n         <button onClick={handleRefreshStocks}>Refresh</button>\n         <button onClick={onLogout}>Logout</button>\n      </div>\n      <AddStock username={username} relaodStocks={relaodStocks}/>\n      <StockList stocks={stocks} relaodStocks={relaodStocks} setErrorMessage={setErrorMessage}/>\n   </div>\n\t);\n};\n\nexport default StockApp;"]},"metadata":{},"sourceType":"module"}