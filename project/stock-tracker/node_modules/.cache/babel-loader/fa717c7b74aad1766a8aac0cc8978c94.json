{"ast":null,"code":"import _slicedToArray from\"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{addUser}from'./services';function Login(_ref){var onLogin=_ref.onLogin,errorMessage=_ref.errorMessage,setErrorMessage=_ref.setErrorMessage;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];//const [errorMessage, setErrorMessage] = useState(\"\");\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loginButtonDisabled=_useState4[0],setLoginButtonDisabled=_useState4[1];var handleInput=function handleInput(inputText){setUsername(inputText);if(inputText===\"\"){setLoginButtonDisabled(true);}else{setLoginButtonDisabled(false);}};var onKeyUp=function onKeyUp(e){if(e.key==='Enter'){handleUsername();}};var regExp=/^[a-zA-Z0-9]*$/;var handleUsername=function handleUsername(){if(username===\"\"){setErrorMessage(\"Username cannot be empty\");}else if(!regExp.test(username)){setErrorMessage(\"Username can only contain alphabets or numbers\");}else{setErrorMessage(\"\");addUser({username:username}).then(function(response){onLogin(username);}).catch(function(e){if(e.message)setErrorMessage(e.message);else setErrorMessage(\"Error in login\");});}};return React.createElement(\"div\",{className:\"login-page\"},React.createElement(\"div\",{className:\"login-box\"},React.createElement(\"h1\",null,\"Login\"),React.createElement(\"input\",{type:\"text\",placeholder:\"Enter username\",value:username,onChange:function onChange(e){return handleInput(e.target.value);},onKeyUp:onKeyUp}),React.createElement(\"div\",null,React.createElement(\"span\",{className:\"errorMessage\"},errorMessage)),React.createElement(\"button\",{id:\"submit-button\",type:\"submit\",disabled:loginButtonDisabled,onClick:handleUsername},\"Login\")));}export default Login;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/Login.jsx"],"names":["React","useState","addUser","Login","onLogin","errorMessage","setErrorMessage","username","setUsername","loginButtonDisabled","setLoginButtonDisabled","handleInput","inputText","onKeyUp","e","key","handleUsername","regExp","test","then","response","catch","message","target","value"],"mappings":"kJACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,YAAxB,CAEA,QAASC,CAAAA,KAAT,MAAyD,IAAzCC,CAAAA,OAAyC,MAAzCA,OAAyC,CAA/BC,YAA+B,MAA/BA,YAA+B,CAAjBC,eAAiB,MAAjBA,eAAiB,eACrBL,QAAQ,CAAC,EAAD,CADa,wCAC9CM,QAD8C,eACpCC,WADoC,eAErD;AAFqD,eAGFP,QAAQ,CAAC,IAAD,CAHN,yCAGjDQ,mBAHiD,eAG5BC,sBAH4B,eAKrD,GAAMC,CAAAA,WAAW,CAAI,QAAfA,CAAAA,WAAe,CAACC,SAAD,CAAe,CAChCJ,WAAW,CAACI,SAAD,CAAX,CACA,GAAGA,SAAS,GAAK,EAAjB,CAAoB,CAChBF,sBAAsB,CAAC,IAAD,CAAtB,CACH,CAFD,IAGI,CACAA,sBAAsB,CAAC,KAAD,CAAtB,CACH,CACJ,CARD,CAUA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,CAAD,CAAO,CACnB,GAAGA,CAAC,CAACC,GAAF,GAAU,OAAb,CAAsB,CAClBC,cAAc,GACjB,CACJ,CAJD,CAMH,GAAMC,CAAAA,MAAM,CAAG,gBAAf,CAEG,GAAMD,CAAAA,cAAc,CAAI,QAAlBA,CAAAA,cAAkB,EAAM,CAChC,GAAGT,QAAQ,GAAK,EAAhB,CAAmB,CAClBD,eAAe,CAAC,0BAAD,CAAf,CACA,CAFD,IAGK,IAAG,CAACW,MAAM,CAACC,IAAP,CAAYX,QAAZ,CAAJ,CAA0B,CAC9BD,eAAe,CAAC,gDAAD,CAAf,CACA,CAFI,IAGD,CACHA,eAAe,CAAC,EAAD,CAAf,CACAJ,OAAO,CAAC,CAACK,QAAQ,CAARA,QAAD,CAAD,CAAP,CACCY,IADD,CACO,SAASC,QAAT,CAAmB,CACzBhB,OAAO,CAACG,QAAD,CAAP,CACA,CAHD,EAICc,KAJD,CAIO,SAASP,CAAT,CAAY,CAClB,GAAGA,CAAC,CAACQ,OAAL,CACChB,eAAe,CAACQ,CAAC,CAACQ,OAAH,CAAf,CADD,IAGChB,CAAAA,eAAe,CAAC,gBAAD,CAAf,CACD,CATD,EAUA,CACD,CApBE,CAsBA,MACF,4BAAK,SAAS,CAAG,YAAjB,EACC,2BAAK,SAAS,CAAC,WAAf,EACC,sCADD,CAEC,6BAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,gBAA/B,CAAgD,KAAK,CAAEC,QAAvD,CACC,QAAQ,CAAG,kBAAAO,CAAC,QAAIH,CAAAA,WAAW,CAACG,CAAC,CAACS,MAAF,CAASC,KAAV,CAAf,EADb,CAC8C,OAAO,CAAEX,OADvD,EAFD,CAIC,+BAAK,4BAAM,SAAS,CAAC,cAAhB,EAAgCR,YAAhC,CAAL,CAJD,CAKC,8BAAQ,EAAE,CAAC,eAAX,CAA2B,IAAI,CAAC,QAAhC,CAAyC,QAAQ,CAAEI,mBAAnD,CAAwE,OAAO,CAAEO,cAAjF,UALD,CADD,CADE,CAWF,CAED,cAAeb,CAAAA,KAAf","sourcesContent":["\nimport React, { useState } from 'react';\nimport { addUser } from './services';\n\nfunction Login({onLogin , errorMessage, setErrorMessage}){\n    const [username, setUsername] = useState(\"\");\n    //const [errorMessage, setErrorMessage] = useState(\"\");\n\tconst [loginButtonDisabled, setLoginButtonDisabled] = useState(true);\n\t\n    const handleInput = ((inputText) => {\n        setUsername(inputText);\n        if(inputText === \"\"){\n            setLoginButtonDisabled(true);\n        }\n        else{\n            setLoginButtonDisabled(false);\n        }\n    });\n    \n    const onKeyUp = (e) => {\n        if(e.key === 'Enter') {\n            handleUsername();\n        }\n    };\n\n\tconst regExp = /^[a-zA-Z0-9]*$/;\n\n    const handleUsername = (() => {\n\t\tif(username === \"\"){\n\t\t\tsetErrorMessage(\"Username cannot be empty\");\n\t\t}\n\t\telse if(!regExp.test(username)){\n\t\t\tsetErrorMessage(\"Username can only contain alphabets or numbers\");\n\t\t}\n\t\telse{\n\t\t\tsetErrorMessage(\"\");\n\t\t\taddUser({username})\n\t\t\t.then( function(response) {\n\t\t\t\tonLogin(username)\n\t\t\t})\n\t\t\t.catch(function(e) {\n\t\t\t\tif(e.message)\n\t\t\t\t\tsetErrorMessage(e.message);\n\t\t\t\telse\n\t\t\t\t\tsetErrorMessage(\"Error in login\");\n\t\t\t});\n\t\t}\n\t}); \n\n    return (\n\t\t<div className = \"login-page\">\n\t\t\t<div className=\"login-box\">\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<input type=\"text\" placeholder=\"Enter username\" value={username}\n\t\t\t\t\tonChange={ e => handleInput(e.target.value)} onKeyUp={onKeyUp}/>\n\t\t\t\t<div><span className=\"errorMessage\">{errorMessage}</span></div>\n\t\t\t\t<button id=\"submit-button\" type=\"submit\" disabled={loginButtonDisabled} onClick={handleUsername}>Login</button>\n\t\t\t</div>\n\t\t</div>\t\n  \t);\n }\n\n export default Login;\n"]},"metadata":{},"sourceType":"module"}