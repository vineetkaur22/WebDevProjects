{"ast":null,"code":"import _slicedToArray from\"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import React,{useState}from'react';import{updateStock,deleteStock}from'./services';function StockList(_ref){var stocks=_ref.stocks,relaodStocks=_ref.relaodStocks,setErrorMessage=_ref.setErrorMessage;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),updateButtonDisabled=_useState4[0],setUpdateButtonDisabled=_useState4[1];var handleUpdateStock=function handleUpdateStock(e){var indexString=e.target.id;var index=indexString.split(\"_\")[0];var stockname=stocks[index][\"stockName\"];var quantity=stocks[index][\"quantity\"];var equity=stocks[index][\"equity\"];updateStock({stockname:stockname,quantity:quantity,equity:equity}).then(function(){setUpdateButtonDisabled(true);}).catch(function(e){setErrorMessage(\"Unable to update stock: \"+e);});};var handleQuantityChange=function handleQuantityChange(e){var quantityText=e.target.value;if(quantityText===\"\"){quantityText=(_readOnlyError(\"quantityText\"),0);}var index=e.target.id;var isnum=/^\\d+$/.test(quantityText);if(isnum){var quantity=parseInt(quantityText);stocks[index][\"quantity\"]=quantity;var equity=stocks[index][\"price\"]*quantity;stocks[index][\"equity\"]=equity.toFixed(2);setUpdateButtonDisabled(false);setValue((_readOnlyError(\"value\"),++value));}};var handlDeleteStock=function handlDeleteStock(e){var indexString=e.target.id;var index=indexString.split(\"_\")[0];var stockname=stocks[index][\"stockName\"];deleteStock({stockname:stockname}).then(function(){relaodStocks();}).catch(function(e){setErrorMessage(\"Unable to delete stock: \"+e);});};return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Your Stock Portfolio\"),React.createElement(\"ol\",{className:\"stock-list\"},React.createElement(\"li\",{className:\"stock-item-header\"},React.createElement(\"div\",null,React.createElement(\"div\",null,\"Stock Symbol\"),React.createElement(\"div\",null,\"Price\"),React.createElement(\"div\",null,\"Last Updated Date and Time\"),React.createElement(\"div\",null,\"Quantity\"),React.createElement(\"div\",null,\"Your Equity\"),React.createElement(\"div\",null))),stocks.map(function(stockMap,index){var dateTime=new Date(stockMap[\"lastUpdatedDate\"]);var formattedDate=dateTime.getFullYear()+\"-\"+(dateTime.getMonth()+1)+\"-\"+dateTime.getDate()+\" \"+dateTime.getHours()+\":\"+dateTime.getMinutes()+\":\"+dateTime.getSeconds();return React.createElement(\"li\",{className:\"stock-item\",key:index},React.createElement(\"div\",null,React.createElement(\"div\",null,stockMap[\"stockName\"]),React.createElement(\"div\",null,stockMap[\"price\"]),React.createElement(\"div\",null,formattedDate),React.createElement(\"div\",null,React.createElement(\"input\",{className:\"quantity-input\",type:\"text\",id:index,value:stockMap[\"quantity\"],onChange:function onChange(e){return handleQuantityChange(e);}}),React.createElement(\"button\",{id:index+\"_save\",disabled:updateButtonDisabled,onClick:handleUpdateStock},\"Update\")),React.createElement(\"div\",null,stockMap[\"equity\"]),React.createElement(\"div\",null,React.createElement(\"button\",{id:index+\"_delete\",onClick:handlDeleteStock},\"Delete\"))));})));};export default StockList;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx"],"names":["React","useState","updateStock","deleteStock","StockList","stocks","relaodStocks","setErrorMessage","value","setValue","updateButtonDisabled","setUpdateButtonDisabled","handleUpdateStock","e","indexString","target","id","index","split","stockname","quantity","equity","then","catch","handleQuantityChange","quantityText","isnum","test","parseInt","toFixed","handlDeleteStock","map","stockMap","dateTime","Date","formattedDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { updateStock, deleteStock } from './services';\n\nfunction StockList({stocks, relaodStocks, setErrorMessage}){\n\n   const [value, setValue] = useState(0);\n   const [updateButtonDisabled, setUpdateButtonDisabled] = useState(true);\n\n   const handleUpdateStock = ((e) => {\n      const indexString = e.target.id;\n      const index = indexString.split(\"_\")[0];\n      const stockname = stocks[index][\"stockName\"];\n      const quantity = stocks[index][\"quantity\"];\n      const equity = stocks[index][\"equity\"];\n      updateStock({stockname, quantity, equity})\n      .then( () => { \n         setUpdateButtonDisabled(true);\n      })\n      .catch(function(e){\n         setErrorMessage(\"Unable to update stock: \" + e);\n      });\n   });\n\n   const handleQuantityChange = ((e) => {\n      const quantityText = e.target.value;\n      if(quantityText === \"\"){\n         quantityText = 0;\n      }\n      const index = e.target.id;\n      const isnum = /^\\d+$/.test(quantityText);\n      if(isnum){\n         const quantity = parseInt(quantityText);\n         stocks[index][\"quantity\"] = quantity;\n         let equity = stocks[index][\"price\"] * quantity;\n         stocks[index][\"equity\"] = equity.toFixed(2);\n         setUpdateButtonDisabled(false);\n         setValue(++value);\n      }\n   });\n\n   const handlDeleteStock = ((e)=> {\n      const indexString = e.target.id;\n      const index = indexString.split(\"_\")[0];\n      const stockname = stocks[index][\"stockName\"];\n      deleteStock({stockname})\n      .then(()=>{\n         relaodStocks();\n      })\n      .catch(function(e){\n         setErrorMessage(\"Unable to delete stock: \" + e);\n      });\n   });\n\n\treturn (\n   <div>\n   <h2>Your Stock Portfolio</h2>\n   <ol className=\"stock-list\"> \n      <li className=\"stock-item-header\">\n         <div>\n         <div>Stock Symbol</div>\n         <div>Price</div>\n         <div>Last Updated Date and Time</div>\n         <div>Quantity</div>\n         <div>Your Equity</div>\n         <div/>\n      </div> \n      </li>\n   {\n    stocks.map((stockMap,index)=>{\n      const dateTime = new Date(stockMap[\"lastUpdatedDate\"]);\n      const formattedDate = dateTime.getFullYear() + \"-\" + (dateTime.getMonth() + 1) + \"-\" + dateTime.getDate() \n      + \" \" + dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds() ;\n\n      return  <li className=\"stock-item\" key={index}>\n                  <div>\n                  <div>{stockMap[\"stockName\"]}</div>\n                  <div>{stockMap[\"price\"]}</div>\n                  <div>{formattedDate}</div>\n                  <div>\n                     <input className=\"quantity-input\" type=\"text\" id={index} value={stockMap[\"quantity\"]} \n                      onChange={ e => handleQuantityChange(e)}/>\n                     <button  id={index+\"_save\"} disabled={updateButtonDisabled} onClick={handleUpdateStock}>Update</button>\n                  </div>\n                  <div>{stockMap[\"equity\"]}</div>\n                  <div><button id={index+\"_delete\"} onClick={handlDeleteStock}>Delete</button></div>\n                </div> \n             </li>\n          })\n       }\n    </ol>\n    </div>\n\t);\n};\n\nexport default StockList;"]},"metadata":{},"sourceType":"module"}