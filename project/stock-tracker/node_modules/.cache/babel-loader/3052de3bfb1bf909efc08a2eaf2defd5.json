{"ast":null,"code":"import _slicedToArray from \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx\";\nimport React, { useState } from 'react';\nimport { updateStock, deleteStock } from './services';\n\nfunction StockList({\n  stocks,\n  relaodStocks,\n  setErrorMessage\n}) {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  let _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateButtonDisabled = _useState4[0],\n      setUpdateButtonDisabled = _useState4[1];\n\n  const handleUpdateStock = e => {\n    let indexString = e.target.id;\n    let index = indexString.split(\"_\")[0];\n    let stockname = stocks[index][\"stockName\"];\n    let quantity = stocks[index][\"quantity\"];\n    let equity = stocks[index][\"equity\"];\n    updateStock({\n      stockname,\n      quantity,\n      equity\n    }).then(() => {\n      setUpdateButtonDisabled(true);\n    }).catch(function (e) {\n      setErrorMessage(\"Unable to update stock\");\n    });\n  };\n\n  const handleQuantityChange = e => {\n    let quantityText = e.target.value;\n\n    if (quantityText === \"\") {\n      quantityText = 0;\n    }\n\n    let index = e.target.id;\n    let isnum = /^\\d+$/.test(quantityText);\n\n    if (isnum) {\n      let quantity = parseInt(quantityText);\n      stocks[index][\"quantity\"] = quantity;\n      let equity = stocks[index][\"price\"] * quantity;\n      stocks[index][\"equity\"] = equity.toFixed(2);\n      setUpdateButtonDisabled(false);\n      setValue(++value);\n    }\n  };\n\n  const handlDeleteStock = e => {\n    let indexString = e.target.id;\n    let index = indexString.split(\"_\")[0];\n    let stockname = stocks[index][\"stockName\"];\n    deleteStock({\n      stockname\n    }).then(() => {\n      relaodStocks();\n    }).catch(function (e) {\n      console.log(\"Error in deleting stock\");\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Your Stock Portfolio\"), React.createElement(\"ol\", {\n    className: \"stock-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"stock-item-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Stock Symbol\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Last Updated Date and Time\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Your Equity\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), stocks.map((stockMap, index) => {\n    let dateTime = new Date(stockMap[\"lastUpdatedDate\"]);\n    let formattedDate = dateTime.getFullYear() + \"-\" + (dateTime.getMonth() + 1) + \"-\" + dateTime.getDate() + \" \" + dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds();\n    return React.createElement(\"li\", {\n      className: \"stock-item\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, stockMap[\"stockName\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, stockMap[\"price\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, formattedDate), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"quantity-input\",\n      type: \"text\",\n      id: index,\n      value: stockMap[\"quantity\"],\n      onChange: e => handleQuantityChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: index + \"_save\",\n      disabled: updateButtonDisabled,\n      onClick: handleUpdateStock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, stockMap[\"equity\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: index + \"_delete\",\n      onClick: handlDeleteStock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Delete\"))));\n  })));\n}\n\n;\nexport default StockList;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx"],"names":["React","useState","updateStock","deleteStock","StockList","stocks","relaodStocks","setErrorMessage","value","setValue","updateButtonDisabled","setUpdateButtonDisabled","handleUpdateStock","e","indexString","target","id","index","split","stockname","quantity","equity","then","catch","handleQuantityChange","quantityText","isnum","test","parseInt","toFixed","handlDeleteStock","console","log","map","stockMap","dateTime","Date","formattedDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { updateStock, deleteStock } from './services';\n\nfunction StockList({stocks, relaodStocks, setErrorMessage}){\n\n   let [value, setValue] = useState(0);\n   let [updateButtonDisabled, setUpdateButtonDisabled] = useState(true);\n\n   const handleUpdateStock = ((e) => {\n      let indexString = e.target.id;\n      let index = indexString.split(\"_\")[0];\n      let stockname = stocks[index][\"stockName\"];\n      let quantity = stocks[index][\"quantity\"];\n      let equity = stocks[index][\"equity\"];\n      updateStock({stockname, quantity, equity})\n      .then( () => { \n         setUpdateButtonDisabled(true);\n      })\n      .catch(function(e){\n         setErrorMessage(\"Unable to update stock\");\n      });\n   });\n\n   const handleQuantityChange = ((e) => {\n      let quantityText = e.target.value;\n      if(quantityText === \"\"){\n         quantityText = 0;\n      }\n      let index = e.target.id;\n      let isnum = /^\\d+$/.test(quantityText);\n      if(isnum){\n         let quantity = parseInt(quantityText);\n         stocks[index][\"quantity\"] = quantity;\n         let equity = stocks[index][\"price\"] * quantity;\n         stocks[index][\"equity\"] = equity.toFixed(2);\n         setUpdateButtonDisabled(false);\n         setValue(++value);\n      }\n   });\n\n   const handlDeleteStock = ((e)=> {\n      let indexString = e.target.id;\n      let index = indexString.split(\"_\")[0];\n      let stockname = stocks[index][\"stockName\"];\n      deleteStock({stockname})\n      .then(()=>{\n         relaodStocks();\n      })\n      .catch(function(e){\n         console.log(\"Error in deleting stock\");\n      });\n   });\n\n\treturn (\n   <div>\n   <h2>Your Stock Portfolio</h2>\n   <ol className=\"stock-list\"> \n      <li className=\"stock-item-header\">\n         <div>\n         <div>Stock Symbol</div>\n         <div>Price</div>\n         <div>Last Updated Date and Time</div>\n         <div>Quantity</div>\n         <div>Your Equity</div>\n         <div/>\n      </div> \n      </li>\n   {\n    stocks.map((stockMap,index)=>{\n      let dateTime = new Date(stockMap[\"lastUpdatedDate\"]);\n      let formattedDate = dateTime.getFullYear() + \"-\" + (dateTime.getMonth() + 1) + \"-\" + dateTime.getDate() \n      + \" \" + dateTime.getHours() + \":\" + dateTime.getMinutes() + \":\" + dateTime.getSeconds() ;\n\n      return  <li className=\"stock-item\" key={index}>\n                  <div>\n                  <div>{stockMap[\"stockName\"]}</div>\n                  <div>{stockMap[\"price\"]}</div>\n                  <div>{formattedDate}</div>\n                  <div>\n                     <input className=\"quantity-input\" type=\"text\" id={index} value={stockMap[\"quantity\"]} \n                      onChange={ e => handleQuantityChange(e)}/>\n                     <button  id={index+\"_save\"} disabled={updateButtonDisabled} onClick={handleUpdateStock}>Update</button>\n                  </div>\n                  <div>{stockMap[\"equity\"]}</div>\n                  <div><button id={index+\"_delete\"} onClick={handlDeleteStock}>Delete</button></div>\n                </div> \n             </li>\n          })\n       }\n    </ol>\n    </div>\n\t);\n};\n\nexport default StockList;"]},"metadata":{},"sourceType":"module"}