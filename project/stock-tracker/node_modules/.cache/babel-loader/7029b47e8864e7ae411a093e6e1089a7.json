{"ast":null,"code":"import _slicedToArray from \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { updateStock } from './services';\n\nfunction StockList({\n  stocks,\n  refreshStocks\n}) {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  let _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateButtonDisabled = _useState4[0],\n      setUpdateButtonDisabled = _useState4[1]; //    const onKeyUp = (e) => {\n  //       if(e.key === 'Enter') {\n  //          console.log(\"Enter clicked\")\n  //          let index = e.target.id;\n  //          let stockname = stocks[index][\"stockName\"];\n  //          let quantity = stocks[index][\"quantity\"];\n  //          let equity = stocks[index][\"equity\"];\n  //          updateStock({stockname, quantity, equity})\n  //          .then( () => { \n  //             refreshStocks();\n  //          })\n  //          .catch(function(e){\n  //             //setErrorMessage(e.message);\n  //             console.log(\"Error in updating stock\");\n  //          });\n  //       }\n  //   };\n\n\n  const saveQuantityChanged = e => {\n    let index = e.target.id;\n    let stockname = stocks[index][\"stockName\"];\n    let quantity = stocks[index][\"quantity\"];\n    let equity = stocks[index][\"equity\"];\n    updateStock({\n      stockname,\n      quantity,\n      equity\n    }).then(() => {\n      setUpdateButtonDisabled(true);\n    }).catch(function (e) {\n      //setErrorMessage(e.message);\n      console.log(\"Error in updating stock\");\n    });\n  };\n\n  const handleQuantityChange = e => {\n    let quantityText = e.target.value;\n    let index = e.target.id;\n    let isnum = /^\\d+$/.test(quantityText);\n\n    if (isnum) {\n      let quantity = parseInt(quantityText);\n      stocks[index][\"quantity\"] = quantity;\n      let equity = stocks[index][\"price\"] * quantity;\n      stocks[index][\"equity\"] = equity.toFixed(2);\n      setUpdateButtonDisabled(false);\n      setValue(++value);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Your Virtual Portfolio\"), React.createElement(\"ol\", {\n    className: \"stock-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"stock-item-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Stock Symbol\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Last Updated Date\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Your Equity\"))), stocks.map((stockMap, index) => {\n    return React.createElement(\"li\", {\n      className: \"stock-item\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, stockMap[\"stockName\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, stockMap[\"price\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, stockMap[\"lastUpdatedDate\"]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: index,\n      value: stockMap[\"quantity\"],\n      onChange: e => handleQuantityChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: index,\n      disabled: updateButtonDisabled,\n      onClick: saveQuantityChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, stockMap[\"equity\"])));\n  })));\n}\n\n;\nexport default StockList;","map":{"version":3,"sources":["/Users/vineetkaurbagga/Documents/WebDev_Workspace/stock-tracker/src/StockList.jsx"],"names":["React","useState","useCallback","useEffect","updateStock","StockList","stocks","refreshStocks","value","setValue","updateButtonDisabled","setUpdateButtonDisabled","saveQuantityChanged","e","index","target","id","stockname","quantity","equity","then","catch","console","log","handleQuantityChange","quantityText","isnum","test","parseInt","toFixed","map","stockMap"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { updateStock } from './services';\n\nfunction StockList({stocks, refreshStocks}){\n\n   let [value, setValue] = useState(0);\n   let [updateButtonDisabled, setUpdateButtonDisabled] = useState(true);\n   \n//    const onKeyUp = (e) => {\n//       if(e.key === 'Enter') {\n//          console.log(\"Enter clicked\")\n//          let index = e.target.id;\n//          let stockname = stocks[index][\"stockName\"];\n//          let quantity = stocks[index][\"quantity\"];\n//          let equity = stocks[index][\"equity\"];\n//          updateStock({stockname, quantity, equity})\n//          .then( () => { \n//             refreshStocks();\n//          })\n//          .catch(function(e){\n//             //setErrorMessage(e.message);\n//             console.log(\"Error in updating stock\");\n//          });\n//       }\n//   };\n\n   const saveQuantityChanged = ((e) => {\n      let index = e.target.id;\n      let stockname = stocks[index][\"stockName\"];\n      let quantity = stocks[index][\"quantity\"];\n      let equity = stocks[index][\"equity\"];\n      updateStock({stockname, quantity, equity})\n      .then( () => { \n         setUpdateButtonDisabled(true);\n      })\n      .catch(function(e){\n         //setErrorMessage(e.message);\n         console.log(\"Error in updating stock\");\n      });\n   });\n\n   const handleQuantityChange = ((e) => {\n      let quantityText = e.target.value;\n      let index = e.target.id;\n      let isnum = /^\\d+$/.test(quantityText);\n      if(isnum){\n         let quantity = parseInt(quantityText);\n         stocks[index][\"quantity\"] = quantity;\n         let equity = stocks[index][\"price\"] * quantity;\n         stocks[index][\"equity\"] = equity.toFixed(2);\n         setUpdateButtonDisabled(false);\n         setValue(++value);\n      }\n   });\n\n\treturn (\n   <div>\n   <h2>Your Virtual Portfolio</h2>\n   <ol className=\"stock-list\"> \n    \n      <li className=\"stock-item-header\">\n         <div>\n         <div>Stock Symbol</div>\n         <div>Price</div>\n         <div>Last Updated Date</div>\n         <div>Quantity</div>\n         <div>Your Equity</div>\n      </div> \n      </li>\n   {\n    stocks.map((stockMap,index)=>{\n      return  <li className=\"stock-item\" key={index}>\n                  <div>\n                  <div>{stockMap[\"stockName\"]}</div>\n                  <div>{stockMap[\"price\"]}</div>\n                  <div>{stockMap[\"lastUpdatedDate\"]}</div>\n                  <div>\n                     <input type=\"text\" id={index} value={stockMap[\"quantity\"]} \n                      onChange={ e => handleQuantityChange(e)}/>\n                     <button id={index} disabled={updateButtonDisabled} onClick={saveQuantityChanged}>Update</button>\n                  </div>\n                  <div>{stockMap[\"equity\"]}</div>\n                </div> \n             </li>\n          })\n       }\n    </ol>\n    </div>\n\t);\n};\n\nexport default StockList;"]},"metadata":{},"sourceType":"module"}